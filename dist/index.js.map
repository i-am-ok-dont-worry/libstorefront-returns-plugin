{"version":3,"sources":["webpack://LSFPlugin/webpack/universalModuleDefinition","webpack://LSFPlugin/webpack/bootstrap","webpack://LSFPlugin/./index.ts","webpack://LSFPlugin/./src/dao/index.ts","webpack://LSFPlugin/./src/index.ts","webpack://LSFPlugin/./src/service/index.ts","webpack://LSFPlugin/./src/store/returns.actions.ts","webpack://LSFPlugin/./src/store/returns.default.ts","webpack://LSFPlugin/./src/store/returns.reducer.ts","webpack://LSFPlugin/./src/store/returns.thunks.ts","webpack://LSFPlugin/./src/types/index.ts","webpack://LSFPlugin/external \"@grupakmk/libstorefront\"","webpack://LSFPlugin/external \"inversify\"","webpack://LSFPlugin/external \"query-string\""],"names":[],"mappings":"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","file":"index.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"LSFPlugin\", [], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"LSFPlugin\"] = factory();\n\telse\n\t\troot[\"LSFPlugin\"] = factory();\n})(this, function() {\nreturn "," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./index.ts\");\n","export { OrderReturnsPlugin } from './src/index';\nexport { OrderReturnService } from './src/service/index';\nexport { OrderReturnsDefaultState, OrderReturnsModuleState } from './src/store/returns.default';\nexport * from './src/types';\n","import { Task, TaskQueue, URLTransform } from '@grupakmk/libstorefront';\nimport { injectable, inject } from 'inversify';\nimport { OrderReturn } from '../types';\nimport qs from 'query-string';\n\n@injectable()\nexport class OrderReturnsDao {\n\n    public getOrderReturnsList ({ customerId, pageSize, currentPage, sortBy, sortDir }, token: string): Promise<Task> {\n        const query = {\n            pageSize: pageSize || 50,\n            currentPage: currentPage || 0,\n            ...(sortBy && { sortBy, sortDir: sortDir || 'asc' })\n        };\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/returns/' + customerId + qs.stringify(query)) + '&storeCode={{storeCode}}&token={{token}}',\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public getOrderReturn (orderReturnId: string, token: string): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/returns/single/' + orderReturnId + '&storeCode={{storeCode}}&token={{token}}'),\n            payload: {\n                method: 'GET',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors'\n            },\n            silent: true\n        });\n    }\n\n    public createReturn (orderReturn: OrderReturn, token: string): Promise<Task> {\n        return this.taskQueue.execute({\n            url: URLTransform.getAbsoluteApiUrl('/api/vendor/returns' + '&storeCode={{storeCode}}&token={{token}}'),\n            payload: {\n                method: 'POST',\n                headers: { 'Content-Type': 'application/json' },\n                mode: 'cors',\n                body: JSON.stringify(orderReturn)\n            },\n            silent: true\n        });\n    }\n\n    public constructor(\n        @inject(TaskQueue) private taskQueue: TaskQueue\n    ) {}\n}\n","import { createLibstorefrontModule, HookType, LibStorefront } from '@grupakmk/libstorefront';\nimport { LibstorefrontPlugin } from '@grupakmk/libstorefront/dist/config/types/libstorefront-plugin';\nimport { OrderReturnsDao } from './dao';\nimport { OrderReturnService } from './service';\nimport { orderReturnsReducer } from './store/returns.reducer';\nimport { OrderReturnsDefaultState } from './store/returns.default';\n\n/**\n * Plugin provides support for fetching and creating returns.\n *\n * Return is where a customer is not satisfied with the product\n * or the deliverable, & businesses need to create a return the good, based on customer return request.\n */\nexport const OrderReturnsPlugin = ((libstorefront: LibStorefront) => {\n    libstorefront.getIOCContainer().bind<OrderReturnsDao>(OrderReturnsDao).to(OrderReturnsDao);\n    libstorefront.getIOCContainer().bind<OrderReturnService>(OrderReturnService).to(OrderReturnService);\n    libstorefront.listenTo(HookType.AfterCoreModulesRegistered, (lsf: LibStorefront) => {\n        lsf.registerModule(createLibstorefrontModule('orderReturns', orderReturnsReducer, OrderReturnsDefaultState));\n    });\n}) as LibstorefrontPlugin;\n","import { OrderReturn } from '../types';\nimport { AbstractStore, LibstorefrontInnerState } from '@grupakmk/libstorefront';\nimport { injectable, inject } from 'inversify';\nimport { OrderReturnsThunks } from '../store/returns.thunks';\n\n@injectable()\nexport class OrderReturnService {\n\n    /**\n     * Returns list of user returns\n     * @param {number} pageSize\n     * @param {number} currentPage\n     * @param {string} sortBy\n     * @param {asc|desc} sortDir\n     */\n    public getOrderReturns ({ pageSize, currentPage, sortBy, sortDir }: { pageSize?: number, currentPage?: number, sortBy?: string, sortDir?: 'asc'|'desc' } = {}): Promise<OrderReturn[]> {\n        return this.store.dispatch(OrderReturnsThunks.getOrderReturns({ pageSize, currentPage, sortBy, sortDir }));\n    }\n\n    /**\n     * Returns single return\n     * @param {number} orderReturnId\n     */\n    public getSingleOrderReturn (orderReturnId: string): Promise<OrderReturn> {\n        return this.store.dispatch(OrderReturnsThunks.getOrderReturn(orderReturnId));\n    }\n\n    /**\n     * Creates return\n     * @param {OrderReturn} orderReturn\n     * @returns {Promise<string>}\n     */\n    public createOrderReturn (orderReturn: OrderReturn): Promise<string> {\n        return this.store.dispatch(OrderReturnsThunks.createOrderReturn(orderReturn));\n    }\n\n    public constructor(@inject(AbstractStore) private store: AbstractStore<LibstorefrontInnerState>) {}\n}\n","import { OrderReturn } from '../types';\n\nexport namespace OrderReturnsActions {\n    const SN_ORDER_RETURNS = 'order_returns';\n\n    export const SET_ORDER_RETURNS = SN_ORDER_RETURNS + '/SET_ORDER_RETURNS';\n    export const setOrderReturns = (orderReturns: { items: OrderReturn[], total: number, start: number, perPage: number }) => ({\n        type: SET_ORDER_RETURNS,\n        payload: orderReturns\n    });\n\n    export const SET_CURRENT = SN_ORDER_RETURNS + '/SET_CURRENT';\n    export const setCurrent = (orderReturn) => ({\n        type: SET_CURRENT,\n        payload: orderReturn\n    });\n\n    export const ADD_ORDER_RETURN = SN_ORDER_RETURNS\n}\n","import { OrderReturn } from '../types';\n\nexport const OrderReturnsDefaultState: OrderReturnsModuleState = {\n  list: {\n      start: 0,\n      perPage: 50,\n      total: 0,\n      items: []\n  },\n  current: null\n};\n\nexport interface OrderReturnsModuleState {\n    list: {\n        start: number,\n        perPage: number,\n        total: number,\n        items: OrderReturn[]\n    },\n    current: OrderReturn\n}\n","import { Reducer } from '@grupakmk/libstorefront/dist/src/state-management/types/reducer';\nimport { OrderReturnsDefaultState, OrderReturnsModuleState } from './returns.default';\nimport { AnyAction } from '@grupakmk/libstorefront/dist/src/state-management/types/action';\nimport { OrderReturnsActions } from './returns.actions';\n\nexport const orderReturnsReducer: Reducer<OrderReturnsModuleState, AnyAction> = (state: OrderReturnsModuleState, action: AnyAction) => {\n    switch (action.type) {\n        case OrderReturnsActions.SET_ORDER_RETURNS: {\n            const { items, total, perPage, start } = action.payload;\n            return {\n                ...state,\n                list: {\n                    items: items || [],\n                    start: start || 0,\n                    perPage: perPage || 0,\n                    total: total || 0\n                }\n            };\n        }\n        case OrderReturnsActions.SET_CURRENT: {\n            return { ...state, current: action.payload };\n        }\n        default: { return state || OrderReturnsDefaultState };\n    }\n}\n","import { AbstractStore, HttpStatus, IOCContainer, Logger } from '@grupakmk/libstorefront';\nimport { OrderReturnsDao } from '../dao';\nimport { OrderReturnsActions } from './returns.actions';\nimport { OrderReturn } from '../types';\n\nexport namespace OrderReturnsThunks {\n\n    export const getOrderReturns = ({ pageSize, currentPage, sortBy, sortDir }) => async (dispatch, getState) => {\n        try {\n            const userState = IOCContainer.get(AbstractStore).getState().user;\n            if (!userState.current || !userState.token) { throw new Error('Cannot fetch order returns for unauthorized used'); }\n            const response = await IOCContainer.get(OrderReturnsDao).getOrderReturnsList({ customerId: userState.current.id, pageSize, currentPage, sortBy, sortDir }, userState.token);\n\n            if (response && response.code === HttpStatus.OK) {\n                const { items, total } = response.result;\n                await dispatch(OrderReturnsActions.setOrderReturns({\n                    items: items as OrderReturn[],\n                    total,\n                    perPage: pageSize,\n                    start: currentPage\n                }));\n\n                return items;\n            } else {\n                throw new Error(`Empty list`);\n            }\n        } catch (e) {\n            Logger.error(`Unable to fetch returns: `, 'order-returns-thunks', e.message);\n            return null;\n        }\n    };\n\n    export const getOrderReturn = (returnId) => async (dispatch, getState) => {\n        try {\n            if (!returnId) { throw new Error('Return id is undefined'); }\n            const userState = IOCContainer.get(AbstractStore).getState().user;\n            const response = await IOCContainer.get(OrderReturnsDao).getOrderReturn(returnId, userState.token);\n\n            if (response && response.code === HttpStatus.OK) {\n                await dispatch(OrderReturnsActions.setCurrent(response.result));\n            } else {\n                throw new Error('Order return not found');\n            }\n        } catch (e) {\n            Logger.error('Unable to fetch return: ', 'order-returns-thunks', e.message);\n        }\n    };\n\n    export const createOrderReturn = (orderReturnData: OrderReturn) => async (dispatch, getState) => {\n        const userState = IOCContainer.get(AbstractStore).getState().user;\n        if (!userState.current || !userState.token) { throw new Error('Cannot create order returns for unauthorized used'); }\n        const response = await IOCContainer.get(OrderReturnsDao).createReturn({\n            ...orderReturnData,\n            customer_id: userState.current.id,\n            customer_email: userState.current.email,\n        }, userState.token);\n\n        return response;\n    };\n}\n","export interface OrderReturnItem {\n    item_id?: number | string,\n    qty_returned?: number\n}\n\nexport interface OrderReturn {\n    order_id: number,\n    customer_id?: string,\n    customer_email?: string,\n    reason: string,\n    comment: string,\n    items: OrderReturnItem[],\n    returns_id?: number,\n    created_at?: string,\n    status?: OrderReturnStatus,\n    return_number?: string,\n}\n\nexport enum OrderReturnStatus {\n    STATUS_CREATED = 1,\n    STATUS_IN_PROGRESS = 2,\n    DONE = 3\n}\n","module.exports = require(\"@grupakmk/libstorefront\");","module.exports = require(\"inversify\");","module.exports = require(\"query-string\");"],"sourceRoot":""}